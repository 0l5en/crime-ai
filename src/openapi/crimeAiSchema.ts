
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/crimecase": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** get the 10 latest crime cases */
        get: operations["listCrimeCases"];
        put?: never;
        /** create a new crime case */
        post: operations["createCrimeCase"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/crimecase/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** get crime case details by id */
        get: operations["getCrimeCase"];
        put?: never;
        post?: never;
        /** delete a crime case by id */
        delete: operations["deleteCrimeCase"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/crimecase/{id}/evidence": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** get the evidences of a crime case */
        get: operations["getEvidences"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/crimecase/{id}/witness": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** get the witnesses of a crime case */
        get: operations["getWitnesses"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        CrimeCaseDto: {
            id: string;
            title: string;
            description: string;
            imageUrl?: string;
        };
        ResultSetCrimeCase: {
            items?: components["schemas"]["CrimeCaseDto"][];
        };
        CreateCrimeCaseDto: {
            /** Format: int32 */
            amountEvidences: number;
            /** Format: int32 */
            amountPersons: number;
            /** Format: int32 */
            difficultyLevel: number;
            era: string;
            language: string;
            location: string;
            /** Format: int32 */
            maxAmountMotivesPerSuspect: number;
        };
        EvidenceDto: {
            /** Format: int64 */
            id: number;
            title: string;
            description: string;
            location: string;
            analysisResult: string;
        };
        ResultSetEvidence: {
            items?: components["schemas"]["EvidenceDto"][];
        };
        PersonDto: {
            /** Format: int64 */
            id: number;
            name: string;
            type: "VICTIM" | "WITNESS" | "SUSPECT";
            /** Format: int32 */
            age: number;
            profession: string;
            gender: string;
            personality: string;
            maritalStatus: string;
            financialSituation: string;
            previousConvictions: string[];
            relationshipToCase: string;
        };
        ResultSetPerson: {
            items?: components["schemas"]["PersonDto"][];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    listCrimeCases: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResultSetCrimeCase"];
                };
            };
            /** @description if any internal error occurs while processing the request */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    createCrimeCase: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description the data required to create a new crime case */
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateCrimeCaseDto"];
            };
        };
        responses: {
            /** @description successful operation */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description if any internal error occurs while processing the request */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getCrimeCase: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CrimeCaseDto"];
                };
            };
            /** @description crime case not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description if any internal error occurs while processing the request */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    deleteCrimeCase: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description crime case not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description if any internal error occurs while processing the request */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getEvidences: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description crime case id */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResultSetEvidence"];
                };
            };
            /** @description crime case not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description if any internal error occurs while processing the request */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    getWitnesses: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description crime case id */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successful operation */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResultSetPerson"];
                };
            };
            /** @description crime case not found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description if any internal error occurs while processing the request */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
